{"version":3,"sources":["redux/actionTypes/actionTypes.js","redux/reducers/contactsReducer.js","components/phonebook/contactForm/ContactFormStyled.js","components/phonebook/contactForm/ContactForm.js","redux/reducers/filterReducer.js","components/phonebook/filter/Filter.js","components/phonebook/contactList/contactItem/ContactItem.js","components/phonebook/contactList/ContactList.js","components/phonebook/notification/Notification.js","components/phonebook/PhonebookStyled.js","components/phonebook/Phonebook.js","components/App.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["contacts","addContact","createAction","addLocalContacts","removeContact","contactsReducer","createReducer","state","payload","name","number","id","uuidv4","filter","contact","Form","styled","form","ContactForm","contactExists","useState","setState","dispatch","useDispatch","inputHandler","e","target","value","prevState","onSubmit","preventDefault","find","type","onChange","changeFilter","filterReducer","Div","div","Filter","Li","transition","li","ContactItem","data-id","onClick","dataset","ContactList","useSelector","toLowerCase","items","includes","TransitionGroup","component","map","timeout","mountOnEnter","unmountOnExit","Notification","showNotification","in","H1","h1","Phonebook","useEffect","localSorageContacts","JSON","parse","localStorage","getItem","length","setItem","stringify","appear","setTimeout","App","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"6NAAaA,EACJ,eADIA,EAEC,sBAFDA,EAGD,kB,QCECC,EAAaC,YAAaF,GAC1BG,EAAmBD,YAAaF,GAChCI,EAAgBF,YAAaF,GAgB3BK,EAdSC,YAAc,IAAD,mBAChCL,GAAa,SAACM,EAAD,OAASC,EAAT,EAASA,QAAT,MACJ,sBACCD,GADD,CAEF,CACIE,KAAMD,EAAQC,KACdC,OAAQF,EAAQE,OAChBC,GAAIC,oBAPiB,cAUhCT,GAAmB,SAACI,EAAD,OAASC,EAAT,EAASA,QAAT,OAA4B,YAAOA,MAVtB,cAWhCJ,GAAgB,SAACG,EAAD,OAASC,EAAT,EAASA,QAAT,OAA4B,YAAOD,EAAMM,QAAO,SAAAC,GAAO,OAAIA,EAAQH,KAAOH,SAX1D,I,shBCPrC,IA4BeO,EA5BFC,IAAOC,KAAV,KC4CKC,EAzCK,SAAC,GAA+B,IAA9BlB,EAA6B,EAA7BA,SAAUmB,EAAmB,EAAnBA,cAAmB,EACrBC,mBAAS,CAC/BX,KAAM,GACNC,OAAQ,KAHmC,mBACxCH,EADwC,KACjCc,EADiC,KAMzCC,EAAWC,cAEXC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAjBjB,EADe,EACfA,KAAMkB,EADS,EACTA,MACbN,GAAS,SAAAO,GAAS,kCACXA,GADW,kBAEbnB,EAAOkB,QAchB,OACI,eAAC,EAAD,CAAME,SAXY,SAAAJ,GAClBA,EAAEK,iBACE9B,EAAS+B,MAAK,SAAAjB,GAAO,OAAIA,EAAQL,OAASF,EAAME,QAChDU,KAEAG,EAASrB,EAAW,eAAIM,KACxBc,EAAS,CAACZ,KAAM,GAAIC,OAAQ,OAKhC,UACI,yCAEI,uBAAOsB,KAAK,OAAOL,MAAOpB,EAAME,KAAMA,KAAK,OAAOwB,SAAUT,OAEhE,2CAEI,uBAAOQ,KAAK,OAAOL,MAAOpB,EAAMG,OAAQD,KAAK,SAASwB,SAAUT,OAEpE,wBAAQQ,KAAK,SAAb,6BCrCCE,EAAehC,YJGhB,iBIGGiC,EAJO7B,YAAc,GAAD,eAC9B4B,GAAe,SAAC3B,EAAD,YAASC,Y,6SCF7B,IAAM4B,EAAMpB,IAAOqB,IAAV,KAsCMC,EAtBA,WAAO,IAAD,EACSlB,mBAAS,CAC/BO,MAAO,KAFM,mBACVpB,EADU,KACHc,EADG,KAKXC,EAAWC,cAOjB,OACI,cAACa,EAAD,UACI,0DAEI,uBAAOJ,KAAK,OAAOL,MAAOpB,EAAMoB,MAAOlB,KAAK,SAASwB,SAT5C,SAAAR,GACjBJ,EAAS,CAACM,MAAOF,EAAEC,OAAOC,QAC1BL,EAASY,EAAaT,EAAEC,OAAOC,iB,kyBC1BvC,IAAMY,EAAKC,IAAWC,GAAd,KAoCFC,EAAc,SAAC,GAAwB,IAAvBjC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,GAC1BW,EAAWC,cAMjB,OACI,qCACI,4BAAId,IACJ,4BAAIC,IACJ,wBAAQsB,KAAK,SAASW,UAAShC,EAAIiC,QARd,SAAAnB,GACzBH,EAASlB,EAAcqB,EAAEC,OAAOmB,QAAQlC,MAOpC,wBChCGmC,EAfK,WAChB,IAAMjC,EAASkC,aAAY,SAAAxC,GAAK,OAAIA,EAAMP,SAASa,OAAOmC,iBACpDhD,EAAW+C,aAAY,SAAAxC,GAAK,OAAIA,EAAMP,SAASiD,MAAMpC,QAAO,SAAAC,GAAO,OAAIA,EAAQL,KAAKuC,cAAcE,SAASrC,SAEjH,OACI,cAACsC,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SACKpD,EAASqD,KAAI,SAAAvC,GAAO,OACjB,cAACyB,EAAD,CAAqBe,QAAS,IAAMC,cAAY,EAACC,eAAa,EAA9D,SACI,cAAC,EAAD,eAAiB1C,KADZA,EAAQH,U,4sBCTjC,IAAMyB,EAAMI,IAAWH,IAAd,KAqCMoB,EANM,SAAC,GAAD,IAAEC,EAAF,EAAEA,iBAAF,OACjB,cAAC,EAAD,CAAKC,GAAID,EAAkBJ,QAAS,IAAKE,eAAa,EAAtD,sC,ocC/BJ,IAAMpB,EAAMpB,IAAOqB,IAAV,KAUHuB,EAAKpB,IAAWqB,GAAd,KCwCOC,EA5CG,WAAO,IAAD,EACM1C,mBAAS,CAC/BsC,kBAAkB,IAFF,mBACbnD,EADa,KACNc,EADM,KAKdrB,EAAW+C,aAAY,SAAAxC,GAAK,OAAIA,EAAMP,SAASiD,SAC/C3B,EAAWC,cAEjBwC,qBAAU,WACN,IAAMC,EAAsBC,KAAKC,MAAMC,aAAaC,QAAQ,aACxDJ,GAAuBA,EAAoBK,OAAS,GACpD/C,EAASnB,EAAiB,YAAI6D,OAEnC,IAEHD,qBAAU,WACNI,aAAaG,QAAQ,WAAYL,KAAKM,UAAUvE,MACjD,CAACA,IASJ,OACI,eAAC,EAAD,WACI,cAAC4D,EAAD,CAAID,IAAI,EAAMa,QAAM,EAAClB,QAAS,IAA9B,uBAGA,cAAC,EAAD,CAAatD,SAAUA,EAAUmB,cAZnB,WAClBE,EAAS,CAACqC,kBAAkB,IAC5Be,YAAW,WACPpD,EAAS,CAACqC,kBAAkB,MAC7B,QASE1D,EAASqE,OAAS,GACf,qCACI,0CACA,cAAC,EAAD,OAGR,cAAC,EAAD,IACA,cAAC,EAAD,CAAcX,iBAAkBnD,EAAMmD,uBCzCnCgB,EAJH,WACR,OAAO,cAAC,EAAD,K,eCOIC,EAPK,CAChB3E,SAAU4E,YAAgB,CACtB3B,MAAO5C,EACPQ,OAAQsB,KCAD0C,EAJDC,YAAe,CACzBC,QAASJ,ICGbK,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJK,SAASC,eAAe,W","file":"static/js/main.9f08c0ad.chunk.js","sourcesContent":["export const contacts = {\r\n    add: \"ADD_CONCTACT\",\r\n    addLocal: \"ADD_LOCAL_CONCTACTS\",\r\n    remove: \"REMOVE_CONCTACT\",\r\n};\r\n\r\nexport const filter = {\r\n    change: \"CHANGE_FILTER\",\r\n};\r\n","import {createAction} from \"@reduxjs/toolkit\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {contacts} from \"../actionTypes/actionTypes\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport const addContact = createAction(contacts.add);\r\nexport const addLocalContacts = createAction(contacts.addLocal);\r\nexport const removeContact = createAction(contacts.remove);\r\n\r\nconst contactsReducer = createReducer([], {\r\n    [addContact]: (state, {payload}) =>\r\n        (state = [\r\n            ...state,\r\n            {\r\n                name: payload.name,\r\n                number: payload.number,\r\n                id: uuidv4(),\r\n            },\r\n        ]),\r\n    [addLocalContacts]: (state, {payload}) => (state = [...payload]),\r\n    [removeContact]: (state, {payload}) => (state = [...state.filter(contact => contact.id !== payload)]),\r\n});\r\n\r\nexport default contactsReducer;\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n        height: 26px;\r\n        margin-top: 10px;\r\n        background-color: honeydew;\r\n    }\r\n\r\n    button:hover,\r\n    button:focus {\r\n        background-color: lightgreen;\r\n    }\r\n`;\r\n\r\nexport default Form;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addContact} from \"../../../redux/reducers/contactsReducer\";\r\nimport Form from \"./ContactFormStyled\";\r\n\r\nconst ContactForm = ({contacts, contactExists}) => {\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        number: \"\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputHandler = e => {\r\n        const {name, value} = e.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (contacts.find(contact => contact.name === state.name)) {\r\n            contactExists();\r\n        } else {\r\n            dispatch(addContact({...state}));\r\n            setState({name: \"\", number: \"\"});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler}>\r\n            <label>\r\n                Name\r\n                <input type=\"text\" value={state.name} name=\"name\" onChange={inputHandler} />\r\n            </label>\r\n            <label>\r\n                Number\r\n                <input type=\"text\" value={state.number} name=\"number\" onChange={inputHandler} />\r\n            </label>\r\n            <button type=\"submit\">Add contact</button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import {createAction} from \"@reduxjs/toolkit\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {filter} from \"../actionTypes/actionTypes\";\r\n\r\nexport const changeFilter = createAction(filter.change);\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n    [changeFilter]: (state, {payload}) => (state = payload),\r\n});\r\n\r\nexport default filterReducer;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {changeFilter} from \"../../../redux/reducers/filterReducer\";\r\n\r\nconst Div = styled.div`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n`;\r\n\r\nconst Filter = () => {\r\n    const [state, setState] = useState({\r\n        value: \"\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputHandler = e => {\r\n        setState({value: e.target.value});\r\n        dispatch(changeFilter(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <Div>\r\n            <label>\r\n                Find contacts by name\r\n                <input type=\"text\" value={state.value} name=\"filter\" onChange={inputHandler} />\r\n            </label>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import {useDispatch} from \"react-redux\";\r\nimport {removeContact} from \"../../../../redux/reducers/contactsReducer\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nconst Li = transition.li`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    &:enter {\r\n        transform: translateX(-120%);\r\n    }\r\n    &:enter-active {\r\n        transform: translateX(0);\r\n        transition: transform 250ms;\r\n    }\r\n    &:exit {\r\n        transform: translateX(0);\r\n    }\r\n    &:exit-active {\r\n        transform: translateX(-120%);\r\n        transition: transform 250ms;\r\n    }\r\n\r\n    button {\r\n        background-color: hotpink;\r\n        font-weight: 700;\r\n        width: 30px;\r\n        height: 30px;\r\n\r\n        :hover,\r\n        :focus {\r\n            background-color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContactItem = ({name, number, id}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeContactHandler = e => {\r\n        dispatch(removeContact(e.target.dataset.id));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button type=\"button\" data-id={id} onClick={removeContactHandler}>\r\n                &#x2715;\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {ContactItem, Li};\r\n","import {TransitionGroup} from \"react-transition-group\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ContactItem, Li} from \"./contactItem/ContactItem\";\r\n\r\nconst ContactList = () => {\r\n    const filter = useSelector(state => state.contacts.filter.toLowerCase());\r\n    const contacts = useSelector(state => state.contacts.items.filter(contact => contact.name.toLowerCase().includes(filter)));\r\n\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {contacts.map(contact => (\r\n                <Li key={contact.id} timeout={1000} mountOnEnter unmountOnExit>\r\n                    <ContactItem {...contact} />\r\n                </Li>\r\n            ))}\r\n        </TransitionGroup>\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n","import transition from \"styled-transition-group\";\r\n\r\nconst Div = transition.div`\r\n    position: absolute;\r\n    top: 26px;\r\n    left: 70px;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    border-radius: 6px;\r\n    background-color: hotpink;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 200px;\r\n    height: 50px;\r\n    vertical-align: center;\r\n\r\n\r\n    &:enter {\r\n        transform: translateX(-150%);\r\n    }\r\n    &:enter-active {\r\n        transform: translateX(0);\r\n        transition: transform 250ms;\r\n    }\r\n    &:exit {\r\n        transform: translateX(0);\r\n    }\r\n    &:exit-active {\r\n        transform: translateX(-150%);\r\n        transition: transform 250ms;\r\n    }\r\n`;\r\n\r\nconst Notification = ({showNotification}) => (\r\n    <Div in={showNotification} timeout={250} unmountOnExit>\r\n        Contact already exists!\r\n    </Div>\r\n);\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nconst Div = styled.div`\r\n    width: 300px;\r\n    margin-left: 25px;\r\n\r\n    h2 {\r\n        margin-top: 10px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst H1 = transition.h1`\r\n    text-align: center;\r\n\r\n    &:appear {\r\n        transform: translateX(-100%);\r\n    }\r\n    &:appear-active {\r\n        transform: translateX(0);\r\n        transition: transform 500ms;\r\n    }\r\n`;\r\n\r\nexport {Div, H1};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Notification from \"./notification/Notification\";\r\nimport {Div, H1} from \"./PhonebookStyled\";\r\nimport {addLocalContacts} from \"../../redux/reducers/contactsReducer\";\r\n\r\nconst Phonebook = () => {\r\n    const [state, setState] = useState({\r\n        showNotification: false,\r\n    });\r\n\r\n    const contacts = useSelector(state => state.contacts.items);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const localSorageContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n        if (localSorageContacts && localSorageContacts.length > 0) {\r\n            dispatch(addLocalContacts([...localSorageContacts]));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n    const contactExists = () => {\r\n        setState({showNotification: true});\r\n        setTimeout(() => {\r\n            setState({showNotification: false});\r\n        }, 4000);\r\n    };\r\n\r\n    return (\r\n        <Div>\r\n            <H1 in={true} appear timeout={500}>\r\n                Phonebook\r\n            </H1>\r\n            <ContactForm contacts={contacts} contactExists={contactExists} />\r\n            {contacts.length > 0 && (\r\n                <>\r\n                    <h2>Contacts</h2>\r\n                    <Filter />\r\n                </>\r\n            )}\r\n            <ContactList />\r\n            <Notification showNotification={state.showNotification} />\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport Phonebook from \"./phonebook/Phonebook\";\r\n\r\nconst App = () => {\r\n    return <Phonebook />;\r\n};\r\n\r\nexport default App;\r\n","import {combineReducers} from \"redux\";\r\nimport contactsReducer from \"./contactsReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nconst rootReducer = {\r\n    contacts: combineReducers({\r\n        items: contactsReducer,\r\n        filter: filterReducer,\r\n    }),\r\n};\r\n\r\nexport default rootReducer;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}